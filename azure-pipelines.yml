# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool: demopipeline

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install pytest pytest-azurepipelines pytest-cov
      pytest --doctest-modules --cov=. --cov-report=xml
    displayName: 'pytest'
  - script: python3 hello2.py


  - task: PythonScript@0
    inputs:
      scriptSource: inline
      script: |
        import sys
        print ('Executing script file is:', str(sys.argv[0]))
        print ('The arguments are:', str(sys.argv))
        import argparse
        parser = argparse.ArgumentParser()
        parser.add_argument("--world", help="Provide the name of the world to greet.")
        args = parser.parse_args()
        print ('Hello ', args.world)
      arguments: --world Terra